export const projects = [
  {
    title: 'E-commerce marketplace',
    role: 'Software Developer (Contractual, 3yrs+)',
    tech: [
      'Java',
      'Kotlin',
      'Spring',
      'MongoDB',
      'Elasticsearch',
      'Node',
      'React',
      'Microservice',
      'Docker',
      'Kubernetes',
    ],
    img: '/resources/ecommerce-cms.png',
    description: `A microservice based e-commerce marketplace. The core platform provides store owners to create stores, sell products, manage orders and shipping and withdraw their money. It also has some regular but robust e-commerce feature like product details page with caching, product variation, order & inventory management, payment etc. Other necessary features are supported through its robust plugin system like related products, recommended products, shipping box size calculator, warehousing etc.
    `,
  },
  {
    title: 'Review and Recommendation Engine',
    role: 'Software Developer',
    tech: ['Java', 'Kotlin', 'Elasticsearch', 'MongoDB'],
    img: '/resources/recommendation.png',
    description: `It is a linked project with the e-commerce platform. User can give their review based on different criteria on a topic/product. Based on user review, additional feedback, visiting and buying history, topic/products recommendations are generated for the corresponding users. Multiple newsletters are sent based on the recommendation and subscription. Review can be distinguishable by the authenticated user/buyer. It also has some social reaction features, for example, user can comment, like and share any topic in their timeline`,
  },
  {
    title: 'Config server for microservices',
    role: 'Lead developer and product architect',
    tech: ['TypeScript', 'Node.js', 'React'],
    img: '/resources/config-server.png',
    description: `Config server to manage all type of configurations like deployment config, app context, page context etc for microservices with extendable environment feature like production, development, test, stage etc. It can be used in non microservice based infrastructure as well to keep all configuration in sync. It can push notification when any configuration has been changed to the related microservices. Also it can keep the history of configuration changes.`,
  },
  {
    title: 'Ride sharing and ticketing system for local transportation',
    role: 'Full stack developer (Contractual, 1yrs)',
    tech: [
      'Microservice',
      'Java',
      'Kotlin',
      'Spring Boot',
      'Elasticsearch',
      'MongoDB',
      'Vue.js',
      'Node.js',
    ],
    img: '/resources/ride-hailing.png',
    description: `A ride sharing and ticket booking system for local markets with highly engaged traffic. Passengers can travel their destinations sharing with other passengers or can hire a full car. This service will run all over the cities along with highway traveling (inter-city).`,
  },
];
